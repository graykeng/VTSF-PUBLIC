{"ast":null,"code":"import _asyncToGenerator from \"/Users/graykeng/Documents/Coding/webDev/vtsfw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport axios from \"axios\";\nimport Axios from \"axios\";\nvar url = \"https://nodejs.vtsfbackend.ca/api\";\nexport var getEventPic = function getEventPic() {\n  return Axios.get(url + \"/EventPic\").then(function (response) {\n    return response.data;\n  });\n};\nexport var getCommitteeInfo = function getCommitteeInfo() {\n  return Axios.get(url + \"/CommiteeInfo\").then(function (response) {\n    return response.data;\n  });\n};\nexport var getSponsorsInfo = function getSponsorsInfo() {\n  return Axios.get(url + \"/SponsorsInfo\").then(function (response) {\n    return response.data;\n  });\n};\nexport var getLogoPic = function getLogoPic() {\n  return Axios.get(url + \"/LogoPic\").then(function (response) {\n    return response.data;\n  });\n};\nexport var getBlogPostGrid = function getBlogPostGrid() {\n  return Axios.get(url + \"/BlogPostGrid\").then(function (response) {\n    return response.data;\n  });\n};\nexport var getPost = function getPost(id) {\n  return Axios.get(url + \"/BlogPostDetail/\".concat(id)).then(function (response) {\n    return response.data;\n  });\n};\nexport var insertTicketInfo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return Axios.post(url + \"/insertTicketInfo\", {\n            FirstName: data.FirstName,\n            LastName: data.LastName,\n            PhoneNumber: data.PhoneNumber,\n            Email: data.Email,\n            School: data.School,\n            Workshop: data.Workshop,\n            Dietary: data.Dietary,\n            Occupation: data.Occupation,\n            Attended: data.Attended,\n            Heard: data.Heard\n          }).then(function (res) {\n            console.log(res.data);\n          }).catch(function (err) {\n            console.error(err);\n          });\n        case 3:\n          response = _context.sent;\n          _context.next = 10;\n          break;\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          throw _context.t0;\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n  return function insertTicketInfo(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","Axios","url","getEventPic","get","then","response","data","getCommitteeInfo","getSponsorsInfo","getLogoPic","getBlogPostGrid","getPost","id","insertTicketInfo","post","FirstName","LastName","PhoneNumber","Email","School","Workshop","Dietary","Occupation","Attended","Heard","res","console","log","catch","err","error"],"sources":["/Users/graykeng/Documents/Coding/webDev/vtsfw/src/ApiCaller.js"],"sourcesContent":["import axios from \"axios\";\nimport Axios from \"axios\";\n\nconst url = \"https://nodejs.vtsfbackend.ca/api\"\n\nexport const getEventPic = () => {\n    return Axios.get(url + \"/EventPic\")\n        .then((response) => response.data);\n};\n\nexport const getCommitteeInfo = () => {\n    return Axios.get(url + \"/CommiteeInfo\")\n        .then((response) => response.data);\n};\n\nexport const getSponsorsInfo = () => {\n    return Axios.get(url + \"/SponsorsInfo\")\n        .then((response) => response.data);\n};\n\nexport const getLogoPic = () => {\n    return Axios.get(url + \"/LogoPic\")\n        .then((response) => response.data);\n};\n\nexport const getBlogPostGrid = () => {\n    return Axios.get(url + \"/BlogPostGrid\")\n        .then((response) => response.data);\n};\n\nexport const getPost = (id) => {\n    return Axios.get(url + `/BlogPostDetail/${id}`)\n    .then((response) => response.data);\n};\n\nexport const insertTicketInfo = async (data) => {\n    try{\n        const response = await Axios.post(url + \"/insertTicketInfo\", {\n            FirstName: data.FirstName,\n            LastName: data.LastName,\n            PhoneNumber: data.PhoneNumber,\n            Email: data.Email,\n            School: data.School,\n            Workshop: data.Workshop,\n            Dietary: data.Dietary,\n            Occupation: data.Occupation,\n            Attended: data.Attended,\n            Heard: data.Heard,\n            })\n            .then(res => {\n                console.log(res.data);\n            })\n            .catch(err => {\n                console.error(err);\n            }\n        );\n\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n\n}\n"],"mappings":";+CACA;AADA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,GAAG,GAAG,mCAAmC;AAE/C,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EAC7B,OAAOF,KAAK,CAACG,GAAG,CAACF,GAAG,GAAG,WAAW,CAAC,CAC9BG,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI;EAAA,EAAC;AAC1C,CAAC;AAED,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;EAClC,OAAOP,KAAK,CAACG,GAAG,CAACF,GAAG,GAAG,eAAe,CAAC,CAClCG,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI;EAAA,EAAC;AAC1C,CAAC;AAED,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAe,GAAS;EACjC,OAAOR,KAAK,CAACG,GAAG,CAACF,GAAG,GAAG,eAAe,CAAC,CAClCG,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI;EAAA,EAAC;AAC1C,CAAC;AAED,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAU,GAAS;EAC5B,OAAOT,KAAK,CAACG,GAAG,CAACF,GAAG,GAAG,UAAU,CAAC,CAC7BG,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI;EAAA,EAAC;AAC1C,CAAC;AAED,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAe,GAAS;EACjC,OAAOV,KAAK,CAACG,GAAG,CAACF,GAAG,GAAG,eAAe,CAAC,CAClCG,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI;EAAA,EAAC;AAC1C,CAAC;AAED,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAO,CAAIC,EAAE,EAAK;EAC3B,OAAOZ,KAAK,CAACG,GAAG,CAACF,GAAG,6BAAsBW,EAAE,CAAE,CAAC,CAC9CR,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI;EAAA,EAAC;AACtC,CAAC;AAED,OAAO,IAAMO,gBAAgB;EAAA,sEAAG,iBAAOP,IAAI;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,OAEZN,KAAK,CAACc,IAAI,CAACb,GAAG,GAAG,mBAAmB,EAAE;YACzDc,SAAS,EAAET,IAAI,CAACS,SAAS;YACzBC,QAAQ,EAAEV,IAAI,CAACU,QAAQ;YACvBC,WAAW,EAAEX,IAAI,CAACW,WAAW;YAC7BC,KAAK,EAAEZ,IAAI,CAACY,KAAK;YACjBC,MAAM,EAAEb,IAAI,CAACa,MAAM;YACnBC,QAAQ,EAAEd,IAAI,CAACc,QAAQ;YACvBC,OAAO,EAAEf,IAAI,CAACe,OAAO;YACrBC,UAAU,EAAEhB,IAAI,CAACgB,UAAU;YAC3BC,QAAQ,EAAEjB,IAAI,CAACiB,QAAQ;YACvBC,KAAK,EAAElB,IAAI,CAACkB;UACZ,CAAC,CAAC,CACDpB,IAAI,CAAC,UAAAqB,GAAG,EAAI;YACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACnB,IAAI,CAAC;UACzB,CAAC,CAAC,CACDsB,KAAK,CAAC,UAAAC,GAAG,EAAI;YACVH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;UACtB,CAAC,CACJ;QAAA;UAlBKxB,QAAQ;UAAA;UAAA;QAAA;UAAA;UAAA;UAqBdqB,OAAO,CAACI,KAAK,aAAO;UAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAI5B;EAAA,gBA3BYjB,gBAAgB;IAAA;EAAA;AAAA,GA2B5B"},"metadata":{},"sourceType":"module"}