{"ast":null,"code":"import _slicedToArray from \"/Users/graykeng/Documents/Coding/webDev/vtsfw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/graykeng/Documents/Coding/webDev/vtsfw/src/component/FCarousel.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './style/FCarousel.css';\nvar FCarousel = function FCarousel(props) {\n  var imagePaths = props.EventPic.filter(function (val) {\n    return val.InPage === 'Carousel';\n  }).map(function (val) {\n    return val.ImagePath;\n  });\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentImage = _useState2[0],\n    setCurrentImage = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    progress = _useState4[0],\n    setProgress = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    intervalId = _useState6[0],\n    setIntervalId = _useState6[1];\n  var interval = 5;\n  useEffect(function () {\n    if (progress >= 100) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n      return;\n    }\n    clearInterval(intervalId);\n    var newIntervalId = setInterval(function () {\n      setProgress(function (prevProgress) {\n        return prevProgress + 1;\n      });\n    }, 50);\n    setIntervalId(newIntervalId);\n    return function () {\n      clearInterval(newIntervalId);\n    };\n  }, [progress, intervalId]);\n  useEffect(function () {\n    clearTimeout(intervalId);\n    var timeoutId = setTimeout(function () {\n      setCurrentImage(function (prevImage) {\n        return (prevImage + 1) % imagePaths.length;\n      });\n      setProgress(0);\n    }, interval * 1000);\n    setIntervalId(timeoutId);\n    return function () {\n      clearTimeout(timeoutId);\n    };\n  }, [currentImage, intervalId]);\n  var handlePrev = function handlePrev() {\n    setCurrentImage((currentImage - 1 + imagePaths.length) % imagePaths.length);\n    setProgress(0);\n  };\n  var handleNext = function handleNext() {\n    setCurrentImage((currentImage + 1) % imagePaths.length);\n    setProgress(0);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carousel-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carousel-inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"prevButton\",\n    onClick: handlePrev,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: imagePaths[currentImage],\n    alt: currentImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"nextButton\",\n    onClick: handleNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default FCarousel;","map":{"version":3,"names":["React","useState","useEffect","FCarousel","props","imagePaths","EventPic","filter","val","InPage","map","ImagePath","currentImage","setCurrentImage","progress","setProgress","intervalId","setIntervalId","interval","clearInterval","newIntervalId","setInterval","prevProgress","clearTimeout","timeoutId","setTimeout","prevImage","length","handlePrev","handleNext"],"sources":["/Users/graykeng/Documents/Coding/webDev/vtsfw/src/component/FCarousel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style/FCarousel.css';\n\n\nconst FCarousel = (props) => {\n\n  const imagePaths = props.EventPic\n    .filter(val => val.InPage === 'Carousel')\n    .map(val => val.ImagePath);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const interval = 5;\n\n  useEffect(() => {\n    if (progress >= 100) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n      return;\n    }\n\n    clearInterval(intervalId);\n    const newIntervalId = setInterval(() => {\n      setProgress((prevProgress) => prevProgress + 1);\n    }, 50);\n\n    setIntervalId(newIntervalId);\n\n    return () => {\n      clearInterval(newIntervalId);\n    }\n  }, [progress, intervalId]);\n\n  useEffect(() => {\n    clearTimeout(intervalId);\n\n    const timeoutId = setTimeout(() => {\n      setCurrentImage((prevImage) => (prevImage + 1) % imagePaths.length);\n      setProgress(0);\n    }, interval*1000);\n\n    setIntervalId(timeoutId);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [currentImage, intervalId]);\n\n  const handlePrev = () => {\n    setCurrentImage((currentImage - 1 + imagePaths.length) % imagePaths.length);\n    setProgress(0);\n  };\n\n  const handleNext = () => {\n    setCurrentImage((currentImage + 1) % imagePaths.length);\n    setProgress(0);\n  };\n\n  return (\n    <div>\n      <div className=\"carousel-container\">\n        <div className='carousel-inner'>\n          <button className='prevButton' onClick={handlePrev}></button>\n\n          <img src={imagePaths[currentImage]} alt={currentImage} />\n          <button className='nextButton' onClick={handleNext}></button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FCarousel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}