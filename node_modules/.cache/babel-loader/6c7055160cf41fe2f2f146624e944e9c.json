{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/graykeng/Documents/Coding/webDev/vtsfw/src/component/FBlogPost.jsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport './style/FBlogPost.css';\nvar FBlogPost = function FBlogPost(props) {\n  function truncateString(str, maxLength) {\n    var suffix = \"...\";\n    if (str.length <= maxLength) {\n      return str;\n    }\n    var chineseRegEx = /[\\u4e00-\\u9fa5]/g;\n    var chineseChars = str.match(chineseRegEx);\n    var chineseLength = chineseChars ? chineseChars.length : 0;\n    var englishLength = str.length - chineseLength;\n    if (chineseLength * 2 + englishLength <= maxLength) {\n      return str;\n    }\n    var truncatedStr = \"\";\n    var count = 0;\n    for (var i = 0; i < str.length; i++) {\n      if (chineseRegEx.test(str[i])) {\n        count += 2;\n      } else {\n        count += 1;\n      }\n      if (count <= maxLength - suffix.length) {\n        truncatedStr += str[i];\n      } else {\n        break;\n      }\n    }\n    return truncatedStr + suffix;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, moment(props.date).format(\"DD\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"year-month\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, moment(props.date).format(\"YYYY.MM\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-and-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, truncateString(props.ContentEng誒))));\n};\nexport default FBlogPost;","map":{"version":3,"names":["React","useParams","moment","FBlogPost","props","truncateString","str","maxLength","suffix","length","chineseRegEx","chineseChars","match","chineseLength","englishLength","truncatedStr","count","i","test","date","format","title","ContentEng誒"],"sources":["/Users/graykeng/Documents/Coding/webDev/vtsfw/src/component/FBlogPost.jsx"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\n\nimport './style/FBlogPost.css'\n\nconst FBlogPost = ( props ) => {\n  function truncateString(str, maxLength) {\n    let suffix = \"...\";\n    \n    if (str.length <= maxLength) {\n      return str;\n    }\n  \n    let chineseRegEx = /[\\u4e00-\\u9fa5]/g;\n    let chineseChars = str.match(chineseRegEx);\n    let chineseLength = chineseChars ? chineseChars.length : 0;\n  \n    let englishLength = str.length - chineseLength;\n  \n    if (chineseLength * 2 + englishLength <= maxLength) {\n      return str;\n    }\n  \n    let truncatedStr = \"\";\n    let count = 0;\n  \n    for (let i = 0; i < str.length; i++) {\n      if (chineseRegEx.test(str[i])) {\n        count += 2;\n      } else {\n        count += 1;\n      }\n  \n      if (count <= maxLength - suffix.length) {\n        truncatedStr += str[i];\n      } else {\n        break;\n      }\n    }\n  \n    return truncatedStr + suffix;\n  }\n\n  return (\n    <div className='main'>\n        <div className='date'>\n            <div className='day'>\n              {moment(props.date).format(\"DD\")}\n            </div>\n            <div className='year-month'>\n              {moment(props.date).format(\"YYYY.MM\")}\n            </div>\n        </div>\n        <div className='title-and-content'>\n          <div className='title'>\n            {props.title}\n          </div>\n          <div>\n            {truncateString(props.ContentEng誒)}\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default FBlogPost"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAO,uBAAuB;AAE9B,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAKC,KAAK,EAAM;EAC7B,SAASC,cAAc,CAACC,GAAG,EAAEC,SAAS,EAAE;IACtC,IAAIC,MAAM,GAAG,KAAK;IAElB,IAAIF,GAAG,CAACG,MAAM,IAAIF,SAAS,EAAE;MAC3B,OAAOD,GAAG;IACZ;IAEA,IAAII,YAAY,GAAG,kBAAkB;IACrC,IAAIC,YAAY,GAAGL,GAAG,CAACM,KAAK,CAACF,YAAY,CAAC;IAC1C,IAAIG,aAAa,GAAGF,YAAY,GAAGA,YAAY,CAACF,MAAM,GAAG,CAAC;IAE1D,IAAIK,aAAa,GAAGR,GAAG,CAACG,MAAM,GAAGI,aAAa;IAE9C,IAAIA,aAAa,GAAG,CAAC,GAAGC,aAAa,IAAIP,SAAS,EAAE;MAClD,OAAOD,GAAG;IACZ;IAEA,IAAIS,YAAY,GAAG,EAAE;IACrB,IAAIC,KAAK,GAAG,CAAC;IAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,GAAG,CAACG,MAAM,EAAEQ,CAAC,EAAE,EAAE;MACnC,IAAIP,YAAY,CAACQ,IAAI,CAACZ,GAAG,CAACW,CAAC,CAAC,CAAC,EAAE;QAC7BD,KAAK,IAAI,CAAC;MACZ,CAAC,MAAM;QACLA,KAAK,IAAI,CAAC;MACZ;MAEA,IAAIA,KAAK,IAAIT,SAAS,GAAGC,MAAM,CAACC,MAAM,EAAE;QACtCM,YAAY,IAAIT,GAAG,CAACW,CAAC,CAAC;MACxB,CAAC,MAAM;QACL;MACF;IACF;IAEA,OAAOF,YAAY,GAAGP,MAAM;EAC9B;EAEA,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjB;IAAK,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjB;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBN,MAAM,CAACE,KAAK,CAACe,IAAI,CAAC,CAACC,MAAM,CAAC,IAAI,CAAC,CAC5B,eACN;IAAK,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxBlB,MAAM,CAACE,KAAK,CAACe,IAAI,CAAC,CAACC,MAAM,CAAC,SAAS,CAAC,CACjC,CACJ,eACN;IAAK,SAAS,EAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChC;IAAK,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnBhB,KAAK,CAACiB,KAAK,CACR,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGhB,cAAc,CAACD,KAAK,CAACkB,WAAW,CAAC,CAC9B,CACF,CACJ;AAEV,CAAC;AAED,eAAenB,SAAS"},"metadata":{},"sourceType":"module"}